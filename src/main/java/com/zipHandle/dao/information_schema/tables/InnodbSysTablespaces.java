/*
 * This file is generated by jOOQ.
*/
package com.zipHandle.dao.information_schema.tables;


import com.zipHandle.dao.information_schema.InformationSchema;
import com.zipHandle.dao.information_schema.tables.records.InnodbSysTablespacesRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InnodbSysTablespaces extends TableImpl<InnodbSysTablespacesRecord> {

    private static final long serialVersionUID = -870466630;

    /**
     * The reference instance of <code>information_schema.INNODB_SYS_TABLESPACES</code>
     */
    public static final InnodbSysTablespaces INNODB_SYS_TABLESPACES = new InnodbSysTablespaces();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InnodbSysTablespacesRecord> getRecordType() {
        return InnodbSysTablespacesRecord.class;
    }

    /**
     * The column <code>information_schema.INNODB_SYS_TABLESPACES.SPACE</code>.
     */
    public final TableField<InnodbSysTablespacesRecord, UInteger> SPACE = createField("SPACE", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.INNODB_SYS_TABLESPACES.NAME</code>.
     */
    public final TableField<InnodbSysTablespacesRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(655).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>information_schema.INNODB_SYS_TABLESPACES.FLAG</code>.
     */
    public final TableField<InnodbSysTablespacesRecord, UInteger> FLAG = createField("FLAG", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.INNODB_SYS_TABLESPACES.FILE_FORMAT</code>.
     */
    public final TableField<InnodbSysTablespacesRecord, String> FILE_FORMAT = createField("FILE_FORMAT", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "");

    /**
     * The column <code>information_schema.INNODB_SYS_TABLESPACES.ROW_FORMAT</code>.
     */
    public final TableField<InnodbSysTablespacesRecord, String> ROW_FORMAT = createField("ROW_FORMAT", org.jooq.impl.SQLDataType.VARCHAR.length(22), this, "");

    /**
     * The column <code>information_schema.INNODB_SYS_TABLESPACES.PAGE_SIZE</code>.
     */
    public final TableField<InnodbSysTablespacesRecord, UInteger> PAGE_SIZE = createField("PAGE_SIZE", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.INNODB_SYS_TABLESPACES.ZIP_PAGE_SIZE</code>.
     */
    public final TableField<InnodbSysTablespacesRecord, UInteger> ZIP_PAGE_SIZE = createField("ZIP_PAGE_SIZE", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * Create a <code>information_schema.INNODB_SYS_TABLESPACES</code> table reference
     */
    public InnodbSysTablespaces() {
        this("INNODB_SYS_TABLESPACES", null);
    }

    /**
     * Create an aliased <code>information_schema.INNODB_SYS_TABLESPACES</code> table reference
     */
    public InnodbSysTablespaces(String alias) {
        this(alias, INNODB_SYS_TABLESPACES);
    }

    private InnodbSysTablespaces(String alias, Table<InnodbSysTablespacesRecord> aliased) {
        this(alias, aliased, null);
    }

    private InnodbSysTablespaces(String alias, Table<InnodbSysTablespacesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return InformationSchema.INFORMATION_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InnodbSysTablespaces as(String alias) {
        return new InnodbSysTablespaces(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InnodbSysTablespaces rename(String name) {
        return new InnodbSysTablespaces(name, null);
    }
}
