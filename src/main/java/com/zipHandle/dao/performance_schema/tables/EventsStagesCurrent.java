/*
 * This file is generated by jOOQ.
*/
package com.zipHandle.dao.performance_schema.tables;


import com.zipHandle.dao.performance_schema.PerformanceSchema;
import com.zipHandle.dao.performance_schema.enums.EventsStagesCurrentNestingEventType;
import com.zipHandle.dao.performance_schema.tables.records.EventsStagesCurrentRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventsStagesCurrent extends TableImpl<EventsStagesCurrentRecord> {

    private static final long serialVersionUID = 733846397;

    /**
     * The reference instance of <code>performance_schema.events_stages_current</code>
     */
    public static final EventsStagesCurrent EVENTS_STAGES_CURRENT = new EventsStagesCurrent();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EventsStagesCurrentRecord> getRecordType() {
        return EventsStagesCurrentRecord.class;
    }

    /**
     * The column <code>performance_schema.events_stages_current.THREAD_ID</code>.
     */
    public final TableField<EventsStagesCurrentRecord, ULong> THREAD_ID = createField("THREAD_ID", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>performance_schema.events_stages_current.EVENT_ID</code>.
     */
    public final TableField<EventsStagesCurrentRecord, ULong> EVENT_ID = createField("EVENT_ID", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>performance_schema.events_stages_current.END_EVENT_ID</code>.
     */
    public final TableField<EventsStagesCurrentRecord, ULong> END_EVENT_ID = createField("END_EVENT_ID", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>performance_schema.events_stages_current.EVENT_NAME</code>.
     */
    public final TableField<EventsStagesCurrentRecord, String> EVENT_NAME = createField("EVENT_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * The column <code>performance_schema.events_stages_current.SOURCE</code>.
     */
    public final TableField<EventsStagesCurrentRecord, String> SOURCE = createField("SOURCE", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

    /**
     * The column <code>performance_schema.events_stages_current.TIMER_START</code>.
     */
    public final TableField<EventsStagesCurrentRecord, ULong> TIMER_START = createField("TIMER_START", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>performance_schema.events_stages_current.TIMER_END</code>.
     */
    public final TableField<EventsStagesCurrentRecord, ULong> TIMER_END = createField("TIMER_END", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>performance_schema.events_stages_current.TIMER_WAIT</code>.
     */
    public final TableField<EventsStagesCurrentRecord, ULong> TIMER_WAIT = createField("TIMER_WAIT", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>performance_schema.events_stages_current.NESTING_EVENT_ID</code>.
     */
    public final TableField<EventsStagesCurrentRecord, ULong> NESTING_EVENT_ID = createField("NESTING_EVENT_ID", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>performance_schema.events_stages_current.NESTING_EVENT_TYPE</code>.
     */
    public final TableField<EventsStagesCurrentRecord, EventsStagesCurrentNestingEventType> NESTING_EVENT_TYPE = createField("NESTING_EVENT_TYPE", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.zipHandle.dao.performance_schema.enums.EventsStagesCurrentNestingEventType.class), this, "");

    /**
     * Create a <code>performance_schema.events_stages_current</code> table reference
     */
    public EventsStagesCurrent() {
        this("events_stages_current", null);
    }

    /**
     * Create an aliased <code>performance_schema.events_stages_current</code> table reference
     */
    public EventsStagesCurrent(String alias) {
        this(alias, EVENTS_STAGES_CURRENT);
    }

    private EventsStagesCurrent(String alias, Table<EventsStagesCurrentRecord> aliased) {
        this(alias, aliased, null);
    }

    private EventsStagesCurrent(String alias, Table<EventsStagesCurrentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return PerformanceSchema.PERFORMANCE_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventsStagesCurrent as(String alias) {
        return new EventsStagesCurrent(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EventsStagesCurrent rename(String name) {
        return new EventsStagesCurrent(name, null);
    }
}
